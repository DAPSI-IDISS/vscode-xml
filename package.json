{
  "name": "semantic-crosswalk-editor",
  "displayName": "Semantic Crosswalk Editor",
  "description": "Semantic Crosswalk for XXX formats by DAPSI-IDISS, based on the XML extension by Red Hat",
  "version": "0.17.0",
  "author": "DAPSI-IDISS",
  "publisher": "DAPSI-IDISS",
  "icon": "icons/icon128.png",
  "license": "EPL-2.0",
  "bugs": "https://github.com/DAPSI-IDISS/semantic-crosswalk-editor/issues",
  "preview": true,
  "keywords": [
    "xxx",
    "xml",
    "xsl",
    "xsd",
    "dtd"
  ],
  "xxxServer": {
    "version": "0.16.2"
  },
  "binaryServerDownloadUrl": {
    "linux": "https://download.jboss.org/jbosstools/vscode/snapshots/lemminx-binary/LATEST/lemminx-linux.zip",
    "osx-x86_64": "https://download.jboss.org/jbosstools/vscode/snapshots/lemminx-binary/LATEST/lemminx-osx-x86_64.zip",
    "win32": "https://download.jboss.org/jbosstools/vscode/snapshots/lemminx-binary/LATEST/lemminx-win32.zip"
  },
  "engines": {
    "vscode": "^1.37.0"
  },
  "activationEvents": [
    "onLanguage:xxx",
    "onCommand:xxx.open.docs",
    "onCommand:xxx.open.docs.home"
  ],
  "main": "./dist/extension",
  "scripts": {
    "preinstall": "npx npm-force-resolutions",
    "vscode:prepublish": "webpack --mode production",
    "compile": "webpack --mode none",
    "watch": "webpack --mode development --watch",
    "test-compile": "tsc -p ./",
    "pretest": "npm run test-compile",
    "test": "node ./out/test/runTest.js",
    "tslint": "./node_modules/.bin/tslint -p .",
    "build": "./node_modules/.bin/gulp build",
    "build-server": "./node_modules/.bin/gulp build_server"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/DAPSI-IDISS/semantic-crosswalk-editor"
  },
  "categories": [
    "Programming Languages",
    "Linters",
    "Formatters",
    "Snippets"
  ],
  "extensionDependencies": [
    "redhat.vscode-commons"
  ],
  "devDependencies": {
    "@types/fs-extra": "^8.0.0",
    "@types/node": "^10.14.16",
    "@types/vscode": "^1.37.0",
    "@types/yauzl": "^2.9.1",
    "gulp": "^4.0.2",
    "gulp-rename": "^1.4.0",
    "gulp-tslint": "^8.1.3",
    "minimist": ">=1.2.5",
    "serialize-javascript": "^4.0.0",
    "ts-loader": "^6.0.1",
    "tslint": "^5.12.1",
    "typescript": "^3.4.1",
    "typescript-tslint-plugin": "^0.3.1",
    "vscode-test": "^1.2.0",
    "webpack": "^5.28.0",
    "webpack-cli": "^4.6.0"
  },
  "dependencies": {
    "@redhat-developer/vscode-redhat-telemetry": "0.0.13",
    "expand-home-dir": "^0.0.3",
    "find-java-home": "1.1.0",
    "fs-extra": "^8.1.0",
    "glob": "^7.1.4",
    "path-exists": "^4.0.0",
    "vscode-languageclient": "^7.0.0",
    "yauzl": "^2.10.0"
  },
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "XXX",
      "properties": {
        "xxx.java.home": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "markdownDescription": "Specifies the folder path to the JDK (8 or more recent) used to launch the XXX Language Server if the Java server is being run.\nOn Windows, backslashes must be escaped, i.e.\n`\"xxx.java.home\": \"C:\\\\Program Files\\\\Java\\\\jdk1.8.0_161\"`. For more information, please refer to [this document](command:xxx.open.docs?%5B%7B%22page%22%3A%22Preferences%22%2C%22section%22%3A%22java-home%22%7D%5D).",
          "scope": "window"
        },
        "xxx.server.vmargs": {
          "type": [
            "string",
            "null"
          ],
          "default": "-Xmx64M",
          "markdownDescription": "Specifies extra VM arguments used to launch the XXX Language Server. Eg. use `-Xmx1G  -XX:+UseG1GC -XX:+UseStringDeduplication` to increase the heap size to 1GB and enable String deduplication with the G1 Garbage collector. Please refer to [this document](command:xxx.open.docs?%5B%7B%22page%22%3A%22Preferences%22%2C%22section%22%3A%22server-vm-arguments%22%7D%5D) for more information on the Java server arguments.",
          "scope": "window"
        },
        "xxx.server.workDir": {
          "type": "string",
          "default": "~/.lemminx",
          "markdownDescription": "Set a custom folder path for cached XXX Schemas. An absolute path is expected, although the `~` prefix (for the user home directory) is supported. Default is `~/.lemminx`. Please refer to the [cache documentation](command:xxx.open.docs?%5B%7B%22page%22%3A%22Preferences%22%2C%22section%22%3A%22server-cache-path%22%7D%5D) for more information.",
          "scope": "window"
        },
        "xxx.server.preferBinary": {
          "type": "boolean",
          "default": false,
          "description": "By default, vscode-xml tries to run the Java version of the XXX Language Server. If no Java is detected, vscode-xml runs the binary XXX language server. When this setting is enabled, the binary will also be used even if Java is installed. If there are additions to the XXX Language Server provided by other extensions, Java will be used (if available) even if this setting is enabled.",
          "scope": "window"
        },
        "xxx.server.silenceExtensionWarning": {
          "type": "boolean",
          "default": false,
          "description": "The XXX Language server allows other VSCode extensions to extend its functionality. It requires Java-specific features in order to do this. If extensions to the XXX language server are detected, but a binary XXX language server is run, a warning will appear. This setting can be used to disable this warning.",
          "scope": "window"
        },
        "xxx.server.binary.path": {
          "type": "string",
          "description": "Specify the path of a custom binary version of the XXX server to use. A binary will be downloaded if this is not set.",
          "scope": "machine"
        },
        "xxx.server.binary.args": {
          "type": "string",
          "markdownDescription": "Command line arguments to supply to the binary server when the binary server is being used. Takes into effect after relaunching VSCode. Please refer to [this website for the available options](https://www.graalvm.org/reference-manual/native-image/HostedvsRuntimeOptions/). For example, you can increase the maximum memory that the server can use to 1 GB by adding `-Xmx1g`",
          "scope": "machine"
        },
        "xxx.server.binary.trustedHashes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "markdownDescription": "List of the SHA256 hashes of trusted copies of the lemminx (XXX language server) binary. See [here](command:xxx.open.docs?%5B%7B%22page%22%3A%22Preferences%22%2C%22section%22%3A%22trusted-binary-hashes%22%7D%5D) for more information",
          "default": [],
          "scope": "application"
        },
        "xxx.trace.server": {
          "type": "string",
          "enum": [
            "off",
            "messages",
            "verbose"
          ],
          "default": "off",
          "markdownDescription": "Traces the communication between VS Code and the XXX language server in the Output view. Default is `off`.",
          "scope": "window"
        },
        "xxx.logs.client": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Enable/disable logging to the Output view. Default is `true`."
        },
        "xxx.catalogs": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "markdownDescription": "Register XXX catalog files. See how to configure [XXX catalog with XSD](command:xxx.open.docs?%5B%7B%22page%22%3A%22Validation%22%2C%22section%22%3A%22xxx-catalog-with-xsd%22%7D%5D) or [XXX catalog with DTD](command:xxx.open.docs?%5B%7B%22page%22%3A%22Validation%22%2C%22section%22%3A%22xxx-catalog-with-dtd%22%7D%5D) for more information.",
          "scope": "window"
        },
        "xxx.fileAssociations": {
          "type": "array",
          "default": [],
          "items": {
            "type": "object",
            "properties": {
              "pattern": {
                "type": "string",
                "markdownDescription": "File glob pattern. Example: `**/*.Format.ps1xxx`\n\nMore information on the glob syntax: https://docs.oracle.com/javase/tutorial/essential/io/fileOps.html#glob"
              },
              "systemId": {
                "type": "string",
                "description": "The path or URL to the XXX schema (XSD or DTD)."
              }
            },
            "required": [
              "pattern",
              "systemId"
            ]
          },
          "markdownDescription": "Allows XXX schemas/ DTD to be associated to file name patterns. Please refer to [XXX file association with XSD](command:xxx.open.docs?%5B%7B%22page%22%3A%22Validation%22%2C%22section%22%3A%22xxx-file-association-with-xsd%22%7D%5D) or [XXX file association with DTD](command:xxx.open.docs?%5B%7B%22page%22%3A%22Validation%22%2C%22section%22%3A%22xxx-file-association-with-dtd%22%7D%5D) for more information. \n\nExample:\n```json\n[{\n  \"pattern\": \"file1.xxx\",\n  \"systemId\": \"path/to/file.xsd\"\n},\n{\n  \"pattern\": \"**/*.xsd\",\n  \"systemId\": \"http://www.w3.org/2001/XXXSchema.xsd\"\n}]\n```",
          "scope": "window"
        },
        "xxx.format.enabled": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Enable/disable ability to format document. Default is `true`.",
          "scope": "window"
        },
        "xxx.format.emptyElements": {
          "type": "string",
          "enum": [
            "ignore",
            "collapse",
            "expand"
          ],
          "default": "ignore",
          "markdownDescription": "Expand/collapse empty elements. Default is `ignore`. See [here](command:xxx.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xxxformatemptyelements%22%7D%5D) for more information.",
          "scope": "window"
        },
        "xxx.format.enforceQuoteStyle": {
          "type": "string",
          "enum": [
            "preferred",
            "ignore"
          ],
          "markdownEnumDescriptions": [
            "Use preferred quote style set by `xxx.preferences.quoteStyle` when formatting.",
            "Ignore quote style formatting."
          ],
          "default": "ignore",
          "markdownDescription": "Enforce `preferred` quote style (set by `#xxx.preferences.quoteStyle#`) or `ignore` quote style when formatting. Default is `ignore`. See [here](command:xxx.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xxxformatenforcequotestyle%22%7D%5D) for more information.",
          "scope": "window"
        },
        "xxx.format.joinCDATALines": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Set to `true` to join lines in CDATA content during formatting. Default is `false`. See [here](command:xxx.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xxxformatjoincdatalines%22%7D%5D) for more information.",
          "scope": "window"
        },
        "xxx.format.joinCommentLines": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Join comment content on format. Default is `false`. See [here](command:xxx.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xxxformatjoincommentlines%22%7D%5D) for more information.",
          "scope": "window"
        },
        "xxx.format.joinContentLines": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Normalize the whitespace of content inside an element. Newlines and excess whitespace are removed. Default is `false`. See [here](command:xxx.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xxxformatjoincontentlines%22%7D%5D) for more information.",
          "scope": "window"
        },
        "xxx.format.preserveAttributeLineBreaks": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Preserve line breaks that appear before and after attributes. This setting is overridden if `#xxx.format.splitAttributes#` is set to `true`. Default is `false`. See [here](command:xxx.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xxxformatpreserveattributelinebreaks%22%7D%5D) for more information.",
          "scope": "window"
        },
        "xxx.format.preserveEmptyContent": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Preserve empty content/whitespace in a tag. Default is `false`. See [here](command:xxx.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xxxformatpreserveemptycontent%22%7D%5D) for more information.",
          "scope": "window"
        },
        "xxx.format.preservedNewlines": {
          "type": "integer",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "default": 2,
          "markdownDescription": "Preserve new lines that separate tags. The value represents the maximum number of new lines per section. A value of 0 removes all new lines. Default is `2`. See [here](command:xxx.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xxxformatpreservednewlines%22%7D%5D) for more information.",
          "scope": "window"
        },
        "xxx.format.spaceBeforeEmptyCloseTag": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Insert space before end of self closing tag. \nExample:\n  ```<tag/> -> <tag />```. Default is `true`. See [here](command:xxx.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xxxformatspacebeforeemptyclosetag%22%7D%5D) for more information.",
          "scope": "window"
        },
        "xxx.format.xsiSchemaLocationSplit": {
          "type": "string",
          "enum": [
            "onElement",
            "onPair",
            "none"
          ],
          "markdownEnumDescriptions": [
            "Put a new line after each namespace and URI, arranging them into one column.",
            "Put a new line after each URI, arranging the content into pairs of namespace and URI.",
            "Ignore `xsi:schemaLocation` content formatting."
          ],
          "default": "none",
          "markdownDescription": "Split `xsi:schemaLocation` content. Default is `none`. See [here](command:xxx.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xxxformatxsischemalocationsplit%22%7D%5D) for more information",
          "scope": "window"
        },
        "xxx.format.splitAttributes": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Split multiple attributes each onto a new line. Default is `false`. See [here](command:xxx.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xxxformatsplitattributes%22%7D%5D) for more information.",
          "scope": "window"
        },
        "xxx.format.splitAttributesIndentSize": {
          "type": "number",
          "default": 2,
          "markdownDescription": "How many levels to indent the attributes by when `#xxx.format.splitAttributes#` is `true`. Default value is `2`. See [here](command:xxx.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xxxformatsplitattributesindentsize%22%7D%5D) for more information"
        },
        "xxx.preferences.quoteStyle": {
          "type": "string",
          "enum": [
            "single",
            "double"
          ],
          "default": "double",
          "markdownDescription": "Preferred quote style to use for completion: `single` quotes, `double` quotes. Default is `double`.",
          "scope": "window"
        },
        "xxx.completion.autoCloseTags": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Enable/disable autoclosing of XXX tags. Default is `true`. \n\nIMPORTANT: Turn off `#editor.autoClosingTags#` for this to work.",
          "scope": "window"
        },
        "xxx.completion.autoCloseRemovesContent": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Enable/disable the content of an element being removed when the element start tag is turned into a self-closing tag. The default setting is to remove the content. See [here](command:xxx.open.docs?%5B%7B%22page%22%3A%22Preferences%22%2C%22section%22%3A%22auto-close-removes-content%22%7D%5D) for more information.",
          "scope": "window"
        },
        "xxx.codeLens.enabled": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Enable/disable XXX CodeLens. Default is `false`. See [here](command:xxx.open.docs?%5B%7B%22page%22%3A%22CodeLens%22%2C%22section%22%3A%22Code%20Lens%22%7D%5D) for information about CodeLens features"
        },
        "xxx.preferences.showSchemaDocumentationType": {
          "type": "string",
          "default": "all",
          "enum": [
            "documentation",
            "appinfo",
            "all",
            "none"
          ],
          "markdownEnumDescriptions": [
            "Documentation comes from the `xs:documentation` element.",
            "Documentation comes from the `xs:appinfo` element.",
            "Documentation comes from the `xs:documentation` and `xs:appinfo` elements.",
            "Displays no documentation."
          ],
          "markdownDescription": "Specifies the source of the XXX schema documentation displayed on hover and completion. Default is `all`. See [here](command:xxx.open.docs?%5B%7B%22page%22%3A%22Preferences%22%2C%22section%22%3A%22documentation-type%22%7D%5D) for more information.",
          "scope": "window"
        },
        "xxx.validation.enabled": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Enable/disable all validation. Default is `true`.",
          "scope": "window"
        },
        "xxx.validation.namespaces.enabled": {
          "type": "string",
          "default": "always",
          "enum": [
            "always",
            "never",
            "onNamespaceEncountered"
          ],
          "markdownEnumDescriptions": [
            "Enable namespaces validation.",
            "Disable namespaces validation.",
            "Enable namespaces validation only when the root element declares an xmlns namespace."
          ],
          "markdownDescription": "Enable/disable namespaces validation. Default is `always`. Ignored if `#xxx.validation.enabled#` is set to `false`. See [here](command:xxx.open.docs?%5B%7B%22page%22%3A%22Validation%22%2C%22section%22%3A%22xxxnamespaceschemaenabled%22%7D%5D) for more information.",
          "scope": "window"
        },
        "xxx.validation.schema.enabled": {
          "type": "string",
          "default": "always",
          "enum": [
            "always",
            "never",
            "onValidSchema"
          ],
          "markdownEnumDescriptions": [
            "Enable schema based validation.",
            "Disable schema based validation.",
            "Enable schema based validation only when the declared xsi:schemaLocation hint or xsi:noNamespaceSchemaLocation is valid for the root element."
          ],
          "markdownDescription": "Enable/disable schema based validation. Default is `always`. Ignored if `#xxx.validation.enabled#` is set to `false`. See [here](command:xxx.open.docs?%5B%7B%22page%22%3A%22Validation%22%2C%22section%22%3A%22xxxvalidationschemaenabled%22%7D%5D) for more information.",
          "scope": "window"
        },
        "xxx.validation.disallowDocTypeDecl": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Enable/disable if a fatal error is thrown if the incoming document contains a DOCTYPE declaration. Default is `false`. See [here](command:xxx.open.docs?%5B%7B%22page%22%3A%22Validation%22%2C%22section%22%3A%22disallow-doc-type-declarations%22%7D%5D) for more information",
          "scope": "window"
        },
        "xxx.validation.resolveExternalEntities": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Enable/disable resolve of external entities. Default is `false`. See [here](command:xxx.open.docs?%5B%7B%22page%22%3A%22Validation%22%2C%22section%22%3A%22resolve-external-entities%22%7D%5D) for more information.",
          "scope": "window"
        },
        "xxx.validation.noGrammar": {
          "type": "string",
          "enum": [
            "ignore",
            "hint",
            "info",
            "warning",
            "error"
          ],
          "default": "hint",
          "markdownDescription": "The message severity when a document has no associated grammar. Default is `hint`.",
          "scope": "window"
        },
        "xxx.symbols.enabled": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Enable/disable document symbols (Outline). Default is `true`. No symbols are given if `\"xxx.symbols.enabled\": false`.",
          "scope": "window"
        },
        "xxx.symbols.excluded": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "markdownDescription": "Disable document symbols (Outline) for the given file name patterns. Updating file name patterns does not automatically reload the Outline view for the relevant file(s). Each file must either be reopened or changed, in order to trigger an Outline view reload.\n\nExample:\n```\n[\n \"**/*LargeFile.xxx\"\n]```.",
          "scope": "window"
        },
        "xxx.symbols.maxItemsComputed": {
          "type": "integer",
          "default": 5000,
          "markdownDescription": "The maximum number of outline symbols and folding regions computed (limited for performance reasons). Default is `5000`. See [here](command:xxx.open.docs?%5B%7B%22page%22%3A%22Symbols%22%2C%22section%22%3A%22xxxsymbolsmaxitemscomputed%22%7D%5D) for more information."
        },
        "xxx.symbols.showReferencedGrammars": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Show referenced grammars in the Outline. Default is `true`. See [here](command:xxx.open.docs?%5B%7B%22page%22%3A%22Symbols%22%2C%22section%22%3A%22xxxsymbolsshowreferencedgrammars%22%7D%5D) for more information.",
          "scope": "window"
        },
        "xxx.symbols.filters": {
          "type": "array",
          "default": [],
          "items": {
            "type": "object",
            "properties": {
              "pattern": {
                "type": "string",
                "markdownDescription": "File glob pattern. Example: `**/*.Format.ps1xxx`\n\nMore information on the glob syntax: https://docs.oracle.com/javase/tutorial/essential/io/fileOps.html#glob"
              },
              "expressions": {
                "type": "array",
                "default": [],
                "items": {
                  "type": "object",
                  "description": "The XXX symbol expression.",
                  "properties": {
                    "xpath": {
                      "type": "string",
                      "markdownDescription": "The XPath expression of the filter."
                    },
                    "excluded": {
                      "type": "boolean",
                      "description": "Exclude/Include the node which matches the XPath expression ."
                    }
                  }
                },
                "markdownDescription": "Array of XXX symbol expressions"
              }
            },
            "required": [
              "pattern",
              "expressions"
            ]
          },
          "markdownDescription": "Allows XXX symbols filter to be associated to file name patterns. See [here](command:xxx.open.docs?%5B%7B%22page%22%3A%22Symbols%22%2C%22section%22%3A%22xxxsymbolsfilters%22%7D%5D) for more information.. \n\nExample:\n```json\n[\n  {\n    \"pattern\": \"pom.xxx\",\n    \"expressions\": [\n      {\n        \"xpath\": \"//text()\"\n      }\n    ]\n  }\n]\n```",
          "scope": "window"
        },
        "xxx.extension.jars": {
          "type": "array",
          "default": [],
          "markdownDescription": "An array of paths to JARs that should be contributed to the LemMinX classpath. The paths can include glob patterns. This is intended to be used as a tool for developing extensions to vscode-xml. See [here](command:xxx.open.docs?%5B%7B%22page%22%3A%22Preferences%22%2C%22section%22%3A%22extension-jars%22%7D%5D) for more information",
          "scope": "window"
        }
      }
    },
    "configurationDefaults": {
      "[xxx]": {
        "editor.autoClosingBrackets": "never",
        "files.trimFinalNewlines": true,
        "editor.linkedEditing": true
      }
    },
    "commands": [
      {
        "command": "xxx.open.docs.home",
        "title": "Open XXX Documentation",
        "category": "XXX"
      },
      {
        "command": "xxx.validation.current.file",
        "title": "Revalidate current XXX file",
        "category": "XXX"
      },
      {
        "command": "xxx.validation.all.files",
        "title": "Revalidate all opened XXX files",
        "category": "XXX"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "xxx.validation.current.file",
          "when": "editorLangId == xxx"
        }
      ]
    },
    "languages": [
      {
        "id": "xxx",
        "extensions": [
          ".xxx"
        ],
        "aliases": ["Triple-X", "XXX"]
      }
    ],
    "grammars": [
      {
        "language": "xxx",
        "scopeName": "text.xxx",
        "path": "./syntaxes/xxx.tmLanguage.json"
      }
    ],
    "jsonValidation": [
      {
        "fileMatch": "package.json",
        "url": "./schemas/package.schema.json"
      }
    ]
  }
}
